{"version":3,"sources":["components/PageDeclaration/PageDeclaration.module.scss","components/Layout/Layout.module.scss","components/PageDeclaration/AskRatesPopup.module.scss","components/DownloadButton/DownloadButton.module.scss","components/PageDeclaration/input__Argix_4Q_2019.xlsx","components/PageDeclaration/output__Argix_Declaration_4Q .xlsx","utils/TabContent.js","components/DownloadButton/DownloadButton.jsx","calculating/helpers.js","components/PageDeclaration/WSDeclaration.jsx","components/PageDeclaration/AskRatesPopup.jsx","calculating/declaration/getTax.js","calculating/declaration/fillCountriesObj.js","calculating/declaration/removeMinusFromEUCountries.js","calculating/declaration/removeMinusFromNonEUCountries.js","calculating/declaration/getSums.js","calculating/declaration/constants.js","calculating/declaration/calculateDeclaration.js","calculating/declaration/createLastTab.js","calculating/declaration/getAllCountries.js","components/PageDeclaration/PageDeclaration.jsx","components/PageExample/PageExample.jsx","components/PageAnotherTab/PageAnotherTab.jsx","components/Layout/heartIcon.svg","components/Layout/Layout.jsx","index.js","components/App/App.jsx"],"names":["module","exports","TabContent","props","children","map","child","tabName","activeTab","DownloadButton","wb","name","className","onClick","wbout","XLSX","write","bookType","bookSST","type","saveAs","Blob","styles","button","financial","value","Number","parseFloat","toFixed","localeNumber","toLocaleString","minimumFractionDigits","WSDeclaration","WSdata","month","saveRef","countries","totalNetSaleBefore","totalTaxBefore","totalNetSaleAfter","totalTaxAfter","totalNetSale_EU","totalNetSale_nonEU","tableElement","useRef","useEffect","current","Array","isArray","console","log","diffNetSale","diffTax","sortData","concat","sort","a","b","ref","table","row","idx","netSale","basis_for_VAT","rate","tax","netSaleStyle","backgroundColor","color","lowNetSaleStyle","key","style","String","fontWeight","height","rowSpan","textAlign","AskRatesPopup","isOpen","setNewRates","countriesRate","other","Object","keys","months","open","closeOnDocumentClick","closeOnEscape","contentStyle","width","minHeight","padding","borderRadius","border","title","description","onSubmit","values","render","handleSubmit","country","countryName","fieldWrapper","allCountries","MonthFieldsPerCountry","monthRates","fields","push","component","initialValue","getTax","fillCountriesObj","WSrows","forEach","removeMinusFromEUCountries","MAX_DIFF_TOTAL_TAX","totalTaxMinus","countryNamesWithMinus","totalRateOfCountriesWithPlus","doMagic","findSkippingCountries","filter","skip","some","newTaxIsMinus","isExistCountryWithNewMinusTax","addSkipFlagToCountry","calculateTotalRateOfCountriesWithPlus","getDiffTax","diffTotalNetSale","getTotalResults","countriesWitnMinRate","reduce","acc","length","totalNetSaleWitnMinRate","diffNetSaleProportion","diffTotalTax","Math","abs","removeMinusFromNonEUCountries","nonEUCountries","totalPositiveNetSale","currentCountry","totalNegativeNetSale","updateCountries","diff","countryWithMinRate","Infinity","newNetSale","setNegativeNetSaleToEUCountries","getSums","totalNetSale","totalTax","getSumNetSaleEU","getSumNetSaleNonEU","MONTHS","1","2","3","4","5","6","7","8","9","10","11","12","RATES","Austria","Denmark","Belgium","Bulgaria","Germany","Finland","France","Italy","Netherlands","Portugal","Sweden","Spain","calculateDeclaration","data","DB","monthsNumbers","WorkSheetsRaw","WorkSheetsResult","monthNumber","parseInt","entries","WSname","countriesRatePerMonth","getCountriesRatePerMonth","createMonthData","arr","existCountry","getTotal","field","createLastTab","getAllCountries","allMonths","isInteger","includes","monthsRates","getRates","PageDeclaration","setActiveTab","setState","handleFile","e","f","target","files","reader","FileReader","result","onload","workbook","read","SheetNames","sheetName","worksheet","Sheets","json","utils","sheet_to_json","header","exelDataObj","isOpenPopup","readAsBinaryString","declarationData","state","ws1Name","ws","table_to_sheet","prevState","renderedTabs","handleClosePopup","inputFile","createRef","book_new","WSnames","this","isShowDownloadBtn","every","href","input__xlsx","download","output__xlsx","hint","chooseWrapper","htmlFor","onChange","id","tabs","isActive","tab","downloadBtn","onClose","React","Component","PageExample","componentDidMount","ws1","table1","ws2","table2","colSpan","PageAnotherTab","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","viewBox","ForwardRef","forwardRef","Layout","useState","showTab","wrapper","nav","active","main","footer","rel","ReactDOM","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,qCAAqC,KAAO,8BAA8B,cAAgB,uCAAuC,KAAO,8BAA8B,IAAM,6BAA6B,UAAY,mCAAmC,YAAc,qCAAqC,MAAQ,iC,gBCAnVD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,uBAAuB,IAAM,oBAAoB,OAAS,yB,iBCAnLD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,YAAc,mCAAmC,aAAe,oCAAoC,MAAQ,6BAA6B,QAAU,+BAA+B,OAAS,gC,8CCAlPD,EAAOC,QAAU,CAAC,OAAS,iC,iBCD3BD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,4D,+KCAhCC,EAAa,SAAAC,GACtB,OAAOA,EAAMC,SAASC,KAAI,SAAAC,GACxB,OAAIA,EAAMH,MAAMI,UAAYJ,EAAMK,UAAmB,KAE9CF,M,6FCEAG,EAAiB,SAAAN,GAAU,IAC9BO,EAAkCP,EAAlCO,GAAIC,EAA8BR,EAA9BQ,KAAMP,EAAwBD,EAAxBC,SAAUQ,EAAcT,EAAdS,UAO1B,OACE,4BAAQC,QANK,WACb,IAAIC,EAAQC,IAAKC,MAAMN,EAAI,CAAEO,SAAS,OAAQC,SAAQ,EAAOC,KAAK,UAClEC,iBAAO,IAAIC,KAAK,CAACP,GAAO,CAACK,KAAK,6BAA8BR,IAIjCC,UAAS,UAAKU,IAAOC,OAAZ,YAAsBX,IAAcR,GAAY,qDCV7EoB,EAAY,SAAAC,GACrB,OAAQC,OAAOC,WAAWF,GAAOG,QAAQ,IAmBhCC,EAAe,SAAAJ,GAExB,OADkBD,EAAUC,GACTK,eAAe,KAAM,CAACC,sBAAuB,K,gBCtBvDC,EAAgB,SAAA7B,GAAU,IAC7B8B,EAA2B9B,EAA3B8B,OAAQC,EAAmB/B,EAAnB+B,MAAOC,EAAYhC,EAAZgC,QACfC,EAAyHH,EAAzHG,UAAWC,EAA8GJ,EAA9GI,mBAAoBC,EAA0FL,EAA1FK,eAAgBC,EAA0EN,EAA1EM,kBAAmBC,EAAuDP,EAAvDO,cAAeC,EAAwCR,EAAxCQ,gBAAiBC,EAAuBT,EAAvBS,mBACpGC,EAAeC,iBAAO,MAM1B,GAJAC,qBAAU,WACRV,EAAQQ,EAAaG,QAASZ,KAC7B,CAACA,EAAOC,KAEPY,MAAMC,QAAQZ,GAEhB,OADAa,QAAQC,IAAR,wBAA6BhB,EAA7B,gBACO,KAMT,IAAIiB,EAAc3B,EAAUA,EAAUa,EAAmB,KAAOb,EAAUe,EAAkB,MACxFa,EAAU5B,EAAUA,EAAUgB,EAAc,KAAOhB,EAAUc,EAAe,MAEhFD,EAAqBR,EAAaQ,EAAqB,KACvDC,EAAiBT,EAAaS,EAAiB,KAC/CC,EAAoBV,EAAaU,EAAoB,KACrDC,EAAgBX,EAAaW,EAAgB,KAC7CC,EAAkBZ,EAAaY,EAAkB,KACjDC,EAAqBb,EAAaa,EAAqB,KAEvD,IAAIW,EAAWjB,EACZkB,SACAC,MAAK,SAASC,EAAGC,GAChB,MAAe,OAAXD,EAAErC,MACI,EAED,KAIb,OACE,oCACE,2BAAOuC,IAAKf,EAAc/B,UAAWU,IAAOqC,OAC1C,+BACE,4BACE,qCACA,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,OAEP,4BACE,mCACA,qCACA,oCACA,4CACA,qDACA,6CACA,4CACA,6CACA,8CACA,uCACA,yCACA,0CACA,oCACA,qCAGJ,+BACGN,EAAShD,KAAI,SAACuD,EAAKC,GAAS,IAAD,EAC8BD,GAAO,GAAzDE,EADoB,EACpBA,QAASC,EADW,EACXA,cAAepD,EADJ,EACIA,KAAMQ,EADV,EACUA,KAAM6C,EADhB,EACgBA,KAAMC,EADtB,EACsBA,IAChDH,EAAUtC,EAAUsC,EAAU,KAC9BC,EAAgBvC,EAAUuC,EAAgB,KAC1CE,EAAMzC,EAAUyC,EAAM,KAWtB,IAAMC,EAAe,CACnBC,gBAAiBL,EAAU,EAAI,MAAQ,GACvCM,MAAON,EAAU,EAAI,QAAU,IAG3BO,EAAkB,CACtBF,gBAAiBL,EAAU,IAAO,UAAY,IAGhD,OACE,wBAAIQ,IAAKT,EAAKU,MAAOF,GACnB,4BAAKR,EAAI,GACT,iCACA,iCACA,2CACA,wBAAIU,MAAOL,GAAeJ,GAC1B,4BAAKC,GACL,4BAAKS,OAAO,WACZ,4BAAKV,GACL,uCACA,4BAAKnD,GACL,4BAAKQ,GACL,mCACA,4BAAK6C,GAAQ,KACb,4BAAKC,GAAO,UAKpB,+BACE,4BACE,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIM,MAAO,CAACE,WAAY,SAAxB,cAA6ClC,GAC7C,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIgC,MAAO,CAACE,WAAY,SAAxB,cAA6CjC,IAE/C,wBAAI+B,MAAO,CAACG,OAAQ,QAClB,wBAAIC,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,OAEnB,wBAAIJ,MAAO,CAACG,OAAQ,SACpB,4BACE,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIH,MAAO,CAACE,WAAY,SAAxB,eAA8CpC,GAC9C,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIkC,MAAO,CAACE,WAAY,SAAxB,eAA8CnC,IAEhD,wBAAIiC,MAAO,CAACG,OAAQ,QAClB,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIH,MAAO,CAACK,UAAW,UAAvB,QAAuCzB,GACvC,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIoB,MAAO,CAACK,UAAW,UAAvB,QAAuCxB,IAEzC,wBAAImB,MAAO,CAACG,OAAQ,QAClB,wBAAIC,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,MACjB,wBAAIA,QAAQ,KAAK,OAEnB,wBAAIJ,MAAO,CAACG,OAAQ,SACpB,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,mCACA,qCACA,4BAAK,MACL,4BAAK,OAEP,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,yDACA,wBAAIH,MAAO,CAACE,WAAY,SAAxB,UAAoChC,GACpC,wBAAI8B,MAAO,CAACE,WAAY,SAAxB,UAAoCjC,GACpC,4BAAK,MACL,4BAAK,MACL,4BAAK,OAEP,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,6DACA,wBAAI+B,MAAO,CAACE,WAAY,SAAxB,UAAoC/B,GACpC,iCACA,4BAAK,MACL,4BAAK,MACL,4BAAK,OAEP,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,iDACA,wBAAI6B,MAAO,CAACE,WAAY,SAAxB,eACA,iCACA,4BAAK,MACL,4BAAK,MACL,4BAAK,OAEP,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,sDACA,wBAAIF,MAAO,CAACE,WAAY,SAAxB,eACA,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,OAEP,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,0DACA,wBAAIF,MAAO,CAACE,WAAY,SAAxB,eACA,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,OAEP,4BACE,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,qCACA,wBAAIF,MAAO,CAACE,WAAY,SAAxB,UAAoClC,GACpC,4BAAK,MACL,4BAAK,MACL,4BAAK,MACL,4BAAK,W,wCCvTNsC,EAAgB,SAAA1E,GAAU,IAC7B2E,EAAiD3E,EAAjD2E,OAAQC,EAAyC5E,EAAzC4E,YAAaC,EAA4B7E,EAA5B6E,cAAkBC,EADX,YACqB9E,EADrB,0CAGlC,IAAK2E,EAAQ,OAAO,KAEpB,IAAI1C,EAAY8C,OAAOC,KAAKH,GACxBI,EAASF,OAAOC,KAAKH,EAAc5C,EAAU,KAejD,OACE,kBAAC,IAAD,eACEiD,MAAM,EACNC,sBAAsB,EACtBC,eAAe,EACfC,aAdsB,CACxBC,MAAO,OACPC,UAAW,QACXvB,gBAAiB,OACjBwB,QAAS,MACTC,aAAc,MACdC,OAAQ,0BASFZ,GAEJ,oCACE,wBAAIrE,UAAWU,IAAOwE,OAAtB,0HACA,6BACA,uBAAGlF,UAAWU,IAAOyE,aAArB,kPAAwF,6BAAxF,4KACA,6BACA,6BACA,kBAAC,IAAD,CACEC,SA5BO,SAAAC,GACblB,EAAYkB,IA4BNC,OAAQ,YAAuB,IAApBC,EAAmB,EAAnBA,aACT,OACE,0BAAMH,SAAUG,GACd,2BAAOvF,UAAWU,IAAOqC,OACvB,+BACE,4BACE,4BAAI,0BAAM/C,UAAWU,IAAO8E,SAAxB,wCAAJ,yCACChB,EAAO/E,KAAI,SAAA6B,GAAK,OAAI,wBAAIoC,IAAKpC,GAAQA,QAG1C,+BACGE,EAAU/B,KAAI,SAAAgG,GAAW,OACxB,wBAAI/B,IAAK+B,EAAazF,UAAWU,IAAOgF,cACtC,4BAAKD,GACL,kBAAC,EAAD,CAAuBE,aAAcvB,EAAeqB,YAAaA,UAKzE,6BACA,6BACA,4BAAQlF,KAAK,SAASP,UAAWU,IAAOC,QAAxC,yCAYZiF,EAAwB,SAAArG,GAAU,IAC9BoG,EAA8BpG,EAA9BoG,aAAcF,EAAgBlG,EAAhBkG,YAChBI,EAAaF,EAAaF,GAC1BK,EAAS,GAEb,IAAK,IAAIxE,KAASuE,EAAY,CAC5B,IAAIzC,EAAOyC,EAAWvE,GAEtBwE,EAAOC,KACL,wBAAIrC,IAAKpC,GACP,kBAAC,IAAD,CACEvB,KAAI,UAAK0F,EAAL,YAAoBnE,GACxB0E,UAAU,QACVzF,KAAK,OACL0F,aAAc7C,MAMtB,OAAO0C,GC9FEI,EAAS,SAAChD,EAASE,GAC5B,OAAOxC,EAAUsC,EAAUE,GAAQ,IAAMA,KCAhC+C,EAAmB,SAACC,EAAQhC,GACrC,IAAI5C,EAAY,GA4ChB,OAlCA4E,EAAOC,SAAQ,SAAArD,GACb,IAAIjD,EAAOiD,EAAI,GACXzC,EAAOyC,EAAI,GACXE,EAAUtC,EAAmB,IAAToC,EAAI,IACxBI,EAAgB,OAAT7C,IAAkBQ,WAAWqD,EAAcrE,KAAU,GAE7DyB,EAAUzB,GACXyB,EAAUzB,GAAV,eACKyB,EAAUzB,GADf,CAEEmD,QAAStC,EAAUY,EAAUzB,GAAMmD,QAAUA,KAG/C1B,EAAUzB,GAAQ,CAChBA,OACAQ,OACA6C,OACAF,UACAC,cAAe,KACfE,IAAK,SAUXiB,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/BA,EAAQrC,cAAgBvC,EAAW4E,EAAQtC,SAAWsC,EAAQpC,KAAO,KAAQ,KAC7EoC,EAAQnC,IAAM6C,EAAOV,EAAQtC,QAASsC,EAAQpC,SAIzC5B,G,QC7CE8E,EAA6B,SAAA9E,GACtC,IAAM+E,EAAqB,IAEvB9E,EAAqB,EACrBC,EAAiB,EACjB8E,EAAgB,EAChBC,EAAwB,GACxBC,EAA+B,EAyInC,OAtIApC,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,GAAqB,OAAjBA,EAAQjF,KAAe,OAAO,KAElCkB,EAAqBb,EAAUa,EAAqB+D,EAAQtC,SAC5DxB,EAAiBd,EAAUc,EAAiB8D,EAAQnC,KAEhDmC,EAAQtC,QAAU,GACpBsD,EAAgB5F,EAAU4F,EAAgBhB,EAAQnC,KAClDoD,EAAsBV,KAAKP,EAAQzF,OAEnC2G,EAA+B9F,EAAU8F,EAA+BlB,EAAQpC,SAKpFqD,EAAsBJ,SAAQ,SAAAtG,UACrByB,EAAUzB,MAanB,SAAS4G,KAOP,SAASC,KA4Hb,SAAuCpF,EAAWgF,EAAeE,GAC/D,OAAOpC,OACJe,OAAO7D,GACPqF,QAAO,SAAArB,GAAO,MAAqB,OAAjBA,EAAQjF,QAC1BsG,QAAO,SAAArB,GAAO,OAAKA,EAAQsB,QAC3BC,MAAK,SAAAvB,GACJ,QAAKwB,EAAcxB,EAASgB,EAAeE,OAjItCO,CAA8BzF,EAAWgF,EAAeE,IAC3DpC,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,GAAqB,OAAjBA,EAAQjF,KAAe,OAAO,MAyI5C,SAA8BiB,EAAWgF,EAAeE,GACtDpC,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,MAAqB,OAAjBA,EAAQjF,KAAsB,KAC9BiF,EAAQsB,KAAa,UAEpBE,EAAcxB,EAASgB,EAAeE,KACzClB,EAAQsB,MAAO,OA7IXI,CAAqB1F,EAAWgF,EAAeE,GAC/CA,EAsJV,SAA+ClF,GAC7C,IAAIkF,EAA+B,EASnC,OAPApC,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,MAAqB,OAAjBA,EAAQjF,KAAsB,KAC9BiF,EAAQsB,KAAa,UAEzBJ,EAA+B9F,EAAU8F,EAA+BlB,EAAQpC,UAG3EsD,EAhKgCS,CAAsC3F,GACrEoF,QAbNA,GAwBAtC,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,MAAqB,OAAjBA,EAAQjF,KAAsB,KAC9BiF,EAAQsB,KAAa,MAEzBtB,EAAQnC,IAAMmC,EAAQnC,IAAM+D,EAAW5B,EAAQpC,KAAMsD,EAA8BF,QACnFhB,EAAQtC,SA2FSG,EA3FemC,EAAQnC,IA2FlBD,EA3FuBoC,EAAQpC,KA4FlDxC,EAAYyC,GAAK,IAAID,GAASA,MADvC,IAAuBC,EAAKD,KAzHR,IAoCViE,EAAqBC,EAAgB9F,EAAWC,EAAoBC,GAApE2F,iBAIFE,EAAuBjD,OACxBe,OAAO7D,GACPqF,QAAO,SAAArB,GAAO,MAAmB,OAAjBA,EAAQjF,QACxBiH,QAAO,SAACC,EAAKjC,GACZ,OAAIiC,EAAIC,OAAS,EACR,CAAClC,GAGNA,EAAQpC,KAAOqE,EAAI,GAAGrE,KACjB,CAACoC,GAGNA,EAAQpC,OAASqE,EAAI,GAAGrE,KACpB,GAAN,mBAAWqE,GAAX,CAAgBjC,IAGXiC,IACN,IAODE,EAA0B,EAC9BJ,EAAqBlB,SAAQ,SAAAb,GAC3BmC,EAA0B/G,EAAU+G,EAA0BnC,EAAQtC,YAcxEqE,EAAqBlB,SAAQ,SAAAb,GAC3B,IAAIoC,EAAwBhH,EAAW4E,EAAQtC,QAAUmE,EAAoBM,GAC7EnC,EAAQtC,QAAUtC,EAAU4E,EAAQtC,QAAU0E,GAC9CpC,EAAQnC,IAAM6C,EAAOV,EAAQtC,QAASsC,EAAQpC,SAnFhC,IAwFVyE,EAAiBP,EAAgB9F,EAAWC,EAAoBC,GAAhEmG,aASDC,KAAKC,IAAIF,GAAsC,IAArBtB,IAC7BC,EAAgBqB,EAChBlB,KArGJA,GA2GOnF,GAQT,SAASwF,EAAcxB,EAASgB,EAAeE,GAC7C,IAAIlE,EAAU4E,EAAW5B,EAAQpC,KAAMsD,EAA8BF,GAErE,OADahB,EAAQnC,IAAMb,GACV,EAqEnB,SAAS4E,EAAWhE,EAAMsD,EAA8BF,GACtD,OAAO5F,EAAUkH,KAAKC,IAAIvB,GAAiBpD,EAAOsD,GAUpD,SAASY,EAAgB9F,EAAWC,EAAoBC,GACtD,IAAIC,EAAoB,EACpBC,EAAgB,EAYpB,OAVA0C,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,GAAqB,OAAjBA,EAAQjF,KAAe,OAAO,KAElCoB,EAAoBf,EAAUe,EAAoB6D,EAAQtC,SAC1DtB,EAAgBhB,EAAUgB,EAAgB4D,EAAQnC,QAM7C,CACLgE,iBAJqBzG,EAAUa,EAAqBE,GAKpDkG,aAJiBjH,EAAUc,EAAiBE,ICtPzC,IAAIoG,EAAgC,SAAAxG,GACzC,IAAIyG,EAAiB3D,OAAOe,OAAO7D,GAAWqF,QAAO,SAAArB,GAAO,MAAqB,OAAjBA,EAAQjF,QAEpE2H,EAAuBD,EAAeT,QAAO,SAACC,EAAKU,GACrD,OAAIA,EAAejF,QAAU,EAAUuE,EAChCA,EAAMU,EAAejF,UAC1B,GAEAkF,EAAuBH,EAAeT,QAAO,SAACC,EAAKU,GACrD,OAAIA,EAAejF,QAAU,EAAUuE,EAChCA,EAAMU,EAAejF,UAC1B,GAUJ,IARAkF,EAAuBN,KAAKC,IAAIK,IAQLF,EAAsB,CAC/C,IAAIG,EAuCR,SAAyC7G,EAAW4G,EAAsBF,GACxE,IAAII,EAAOF,EAAuBF,EAE9BK,EAAqB,CAACnF,KAAMoF,KAEhClE,OACGe,OAAO7D,GACPqF,QAAO,SAAArB,GAAO,MAAqB,OAAjBA,EAAQjF,QAC1B8F,SAAQ,SAAAb,GACP,QAAIA,EAAQtC,QAAUoF,KAElBC,EAAmBnF,KAAOoC,EAAQpC,MACpCmF,EAAqB/C,GACd,QAFT,MAMJ,IAAIiD,EAAaF,EAAmBrF,QAAUoF,EAM9C,OAJAC,EAAmBrF,QAAUuF,EAC7BF,EAAmBpF,cAAiBoF,EAAmBrF,SAAWqF,EAAmBnF,KAAO,KAAQ,IACpGmF,EAAmBlF,IAAM6C,EAAOqC,EAAmBrF,QAASqF,EAAmBnF,MAExE5B,EA9DiBkH,CAAgClH,EAAW4G,EAAsBF,GAEvF,IAAK,IAAIxE,KAAO2E,EACoB,OAA9BA,EAAgB3E,GAAKnD,aAChB8H,EAAgB3E,GAI3B,OAAO2E,EAIT,IAAI5B,EAAwB,GAsB5B,OArBAnC,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,GAAqB,OAAjBA,EAAQjF,KAAe,OAAO,KAE9BiF,EAAQtC,QAAU,GACpBuD,EAAsBV,KAAKP,EAAQzF,SAKvC0G,EAAsBJ,SAAQ,SAAAtG,UACrByB,EAAUzB,MAInBuE,OACGe,OAAO7D,GACPqF,QAAO,SAAArB,GAAO,MAAqB,OAAjBA,EAAQjF,QAC1B8F,SAAQ,SAAAb,GACPA,EAAQtC,QAAUtC,EAAU4E,EAAQtC,QAAWsC,EAAQtC,QAAUkF,EAAwBF,MAGtF1G,GCzDF,IAAImH,EAAU,SAAAnH,GACnB,IAAIoH,EAAe,EACfC,EAAW,EAOf,OALAvE,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/BoD,EAAehI,EAAUgI,EAAepD,EAAQtC,SAChD2F,EAAWjI,EAAUiI,EAAWrD,EAAQnC,QAGnC,CACLuF,eACAC,aAKOC,EAAkB,SAAAtH,GAC3B,IAAIoH,EAAe,EAOnB,OALAtE,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,GAAqB,OAAjBA,EAAQjF,KAAe,OAAO,KAClCqI,EAAehI,EAAUgI,EAAepD,EAAQtC,YAG3C0F,GAIEG,EAAqB,SAAAvH,GAC9B,IAAIoH,EAAe,EAOnB,OALAtE,OAAOe,OAAO7D,GAAW6E,SAAQ,SAAAb,GAC/B,GAAqB,OAAjBA,EAAQjF,KAAe,OAAO,KAClCqI,EAAehI,EAAUgI,EAAepD,EAAQtC,YAG3C0F,GCvCII,EAAS,CACpBC,EAAG,UACHC,EAAG,WACHC,EAAG,QACHC,EAAG,QACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,YACHC,GAAI,UACJC,GAAI,WACJC,GAAI,YAGOC,EAAQ,CACnBC,QAAS,GACTC,QAAS,GACTC,QAAS,EACTC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,OAAQ,IACRC,MAAO,EACPC,YAAa,GACbC,SAAU,EACVC,OAAQ,EACRC,MAAO,GACP,iBAAkB,ICpBTC,EAAuB,SAACC,EAAMvG,GAAmB,IACpDwG,GAAOD,GAAQ,IAAfC,GAEDzI,MAAMC,QAAQwI,IACjBvI,QAAQC,IAAI,gCAGd,IAAIuI,EAAgBvG,OAAOC,KAAKyE,GAC5B8B,EAAgB,GAChBC,EAAmB,GAavBF,EAAcxE,SAAQ,SAAA2E,GACpBF,EAAc9B,EAAOgC,IAAgBJ,EAAG/D,QAAO,SAAA7D,GAG7C,OAAOA,EAFSA,EAAI0E,OAAS,KAEHuD,SAASD,EAAa,UAUpD,cAA6B1G,OAAO4G,QAAQJ,GAA5C,eAA4D,CAAC,IAAD,0BAAlDK,EAAkD,KAA1C/E,EAA0C,KACtD9E,EAAQ6J,EAEZ,GAAI/E,EAAOsB,OAAS,EAAG,CACrB,IAAI0D,EAAwBC,EAAyB/J,EAAO8C,GAC5D2G,EAAiBzJ,GAASgK,EAAgBlF,EAAQgF,IAUtD,OAHAL,EAAiB,cCxDQ,SAAAA,GACzB,IAAIvJ,EAAY,GAUhB8C,OAAOe,OAAO0F,GAAkB1E,SAAQ,SAAC/E,EAAO2B,EAAKsI,GAEnDjK,EAAME,UAAU6E,SAAQ,SAAAb,GACtB,IAAIgG,EAAehK,EAAUgE,EAAQzF,MAEjCyL,GACFA,EAAatI,QAAUsI,EAAatI,QAAUsC,EAAQtC,QACtDsI,EAAarI,cAAgBqI,EAAarI,cAAgBqC,EAAQrC,cAClEqI,EAAanI,IAAMmC,EAAQnC,IAAOmI,EAAanI,IAAMmC,EAAQnC,IAAOmI,EAAanI,KAEjF7B,EAAUgE,EAAQzF,MAAlB,eAA8ByF,GAI5BvC,IAASsI,EAAI7D,OAAS,IACxBlG,EAAUgE,EAAQzF,MAAMqD,KAAOoC,EAAQpC,YAO7C,IAAIqI,EAAW,SAAAC,GACb,OAAOpH,OAAOe,OAAO0F,GAAkBvD,QAAO,SAACC,EAAKnG,GAClD,OAAOmG,EAAMnG,EAAMoK,KAClB,IAgBL,MAVa,CACXlK,UAAW8C,OAAOe,OAAO7D,GACzBC,mBAAoBgK,EAAS,sBAC7B/J,eAAgB+J,EAAS,kBACzB9J,kBAAmB8J,EAAS,qBAC5B7J,cAAe6J,EAAS,iBACxB5J,gBAAiB4J,EAAS,mBAC1B3J,mBAAoB2J,EAAS,uBDOEE,CAAcZ,GAGxCA,GAQT,SAASM,EAA0B/J,EAAO8C,GACxC,IAAIgH,EAAwB,GAE5B,IAAK,IAAI3F,KAAerB,EAAe,CACrC,IAAIhB,EAAOgB,EAAcqB,GAAanE,GACtC8J,EAAsB3F,GAAerC,EAGvC,OAAOgI,EAUT,SAASE,EAAgBlF,EAAQhC,GAC3BjC,MAAMC,QAAQgE,IAChB/D,QAAQC,IAAI,+BAed,IAAId,EAAY2E,EAAiBC,EAAQhC,GAjBK,EAoBuBuE,EAAQnH,GAAzDC,EApB0B,EAoBxCmH,aAA4ClH,EApBJ,EAoBNmH,SAGxCrH,EAAYwG,EAA8BxG,GAG1CA,EAAY8E,EAA2B9E,GA1BO,MA6BqBmH,EAAQnH,GAAvDG,EA7B0B,EA6BxCiH,aAA2ChH,EA7BH,EA6BPiH,SAGnChH,EAAkBiH,EAAgBtH,GAClCM,EAAqBiH,EAAmBvH,GAiB5C,MAba,CACXA,UAAW8C,OAAOe,OAAO7D,GACzBC,qBACAC,iBACAC,oBACAC,gBACAC,kBACAC,sBE/HG,IAAI8J,EAAkB,SAAAjB,GAAS,IAC9BC,GAAOD,GAAQ,IAAfC,GAEDzI,MAAMC,QAAQwI,IACjBvI,QAAQC,IAAI,iDAKd,IAAIuJ,EAAY,GAEhBjB,EAAGvE,SAAQ,SAAArD,GACT,IACIgI,EAAchI,EADFA,EAAI0E,OAAS,GAG7B,OAAIsD,EAAc,GAAKA,EAAc,KAAOlK,OAAOgL,UAAUd,IAC3D3I,QAAQC,IAAR,gCAAqC0I,EAArC,MACO,MAGLa,EAAUE,SAAS,CAAC/C,EAAOgC,KAAuB,UAEtDa,EAAU9F,KAAKiD,EAAOgC,OAmBxB,IAAIrF,EAAe,GAcnB,OAZaiF,EAAG/D,QAAO,SAAA7D,GAAG,MAAa,OAAXA,EAAI,MAEzBqD,SAAQ,SAAArD,GACb,IAAIwC,EAAUxC,EAAI,GAElB,GAAG2C,EAAaH,GACd,OAAO,EAEPG,EAAaH,GAiBnB,SAAkBA,EAASqG,GACzB,IAAIG,EAAc,GAMlB,OAJAH,EAAUxF,SAAQ,SAAA/E,GAChB0K,EAAY1K,GAASuI,EAAMrE,MAGtBwG,EAxBqBC,CAASzG,EAASqG,MAIvClG,G,uCC5CIuG,GAAb,YACE,WAAY3M,GAAQ,IAAD,8BACjB,4CAAMA,KAaR4M,aAAe,SAAApM,GAAI,OAAI,WACrB,EAAKqM,SAAS,CAAExM,UAAWG,MAfV,EAkBnBsM,WAAa,SAAAC,GACX,IACIC,EADQD,EAAEE,OAAOC,MACP,GACVC,EAAS,IAAIC,WAEbC,EAAS,GA8Bb,OA5BAF,EAAOG,OAAS,SAAAP,GACd,IAAI3B,EAAO2B,EAAEE,OAAOI,OAEhBE,EAAW3M,IAAK4M,KAAKpC,EAAM,CAC7BpK,KAAa,WAGfuM,EAASE,WAAW3G,SAAQ,SAAC4G,EAAWhK,GACtC,IAAIiK,EAAYJ,EAASK,OAAOL,EAASE,WAAW/J,IAChDmK,EAAOjN,IAAKkN,MAAMC,cAAcJ,EAAW,CAACK,OAAO,IACvDX,EAAOK,GAAaG,KAGtB,IAAIzH,EAAeiG,EAAgBgB,GAEnC,EAAKR,SAAS,CACZoB,YAAaZ,EACba,aAAa,EACbrJ,cAAeuB,KAKjB+G,EAAOgB,mBAAmBnB,IAKrB,GArDU,EAwDnBpI,YAAc,SAAAC,GACZ,IAAIuJ,EAAkBjD,EAAqB,EAAKkD,MAAMJ,YAAapJ,GAC/DyJ,EAAUvJ,OAAOC,KAAKoJ,GAAiB,GAE3C,EAAKvB,SAAS,CACZqB,aAAa,EACb7N,UAAWiO,EACXzJ,gBACAuJ,qBAhEe,EAoEnBpM,QAAU,SAACwB,EAAOzB,GAChB,GAAG,EAAKxB,GAAGqN,OAAO7L,GAChB,OAAO,KAGT,IAAIwM,EAAK3N,IAAKkN,MAAMU,eAAehL,GAEnC,EAAKjD,GAAGkN,WAAWjH,KAAKzE,GACxB,EAAKxB,GAAGqN,OAAO7L,GAASwM,EAExB,EAAK1B,UAAS,SAAA4B,GAAS,sBAClBA,EADkB,CAErBC,aAAa,eACRD,EAAUC,aADH,eAET3M,GAAQ,UAlFI,EAuFnB4M,iBAAmB,SAAA5B,GACjB,EAAK6B,UAAUjM,QAAQrB,MAAQ,GAC/B,EAAKuL,SAAS,CACZqB,aAAa,EACbD,YAAa,GACbpJ,cAAe,MA1FjB,EAAK+J,UAAYC,sBACjB,EAAKtO,GAAKK,IAAKkN,MAAMgB,WACrB,EAAKT,MAAQ,CACXJ,YAAa,GACbG,gBAAiB,GACjBM,aAAc,GACdrO,UAAW,KACXwE,cAAe,GACfqJ,aAAa,GAVE,EADrB,sEAiGa,IAAD,OACJa,EAAUhK,OAAOC,KAAKgK,KAAKX,MAAMD,iBACjCa,EAAqBF,EAAQ5G,OAAS,GAAM4G,EAAQG,OAAM,SAAAnN,GAC5D,OAAO,EAAKsM,MAAMK,aAAa3M,MAGjC,OACE,6BACE,yBAAKtB,UAAWU,IAAOyE,aACrB,iIACA,2BAAG,uBAAGuJ,KAAMC,IAAaC,UAAQ,GAA9B,kCAAH,wNAAsF,uBAAGF,KAAMG,KAAcD,UAAQ,GAA/B,kCAAtF,mJACA,miBACA,uBAAG5O,UAAWU,IAAOoO,MAArB,q1CAECR,EAAQ5G,OAAS,GAChB,yBAAK1H,UAAWU,IAAOqO,eACrB,6KACA,2BAAOC,QAAQ,YAAf,iFACA,2BAAOzO,KAAK,OAAO0O,SAAUV,KAAKlC,WAAY6C,GAAG,WAAWpM,IAAKyL,KAAKJ,cAI5E,yBAAKnO,UAAWU,IAAOyO,MACpBb,EAAQ5G,OAAS,GAAK4G,EAAQ7O,KAAI,SAAAM,GACjC,IAAIqP,EAAWrP,IAAS,EAAK6N,MAAMhO,UAAYc,IAAOd,UAAY,GAElE,OACE,4BACEK,QAAS,EAAKkM,aAAapM,GAC3B2D,IAAK3D,EACLC,UAAS,UAAKU,IAAO2O,IAAZ,YAAmBD,IAE3BrP,MAKNyO,GACC,kBAAC,EAAD,CACE1O,GAAIyO,KAAKzO,GACTC,KAAK,yBACLC,UAAWU,IAAO4O,aAHpB,mHASJ,kBAAChQ,EAAD,CAAYM,UAAW2O,KAAKX,MAAMhO,WAC/B0O,EAAQ7O,KAAI,SAAAM,GACX,IAAI+N,EAAK,EAAKF,MAAMD,gBAAgB5N,GACpC,OACE,kBAAC,EAAD,CAAesB,OAAQyM,EAAIxM,MAAOvB,EAAM2D,IAAK3D,EAAMwB,QAAS,EAAKA,QAAS5B,QAASI,QAIzF,kBAAC,EAAD,CACEmE,OAAQqK,KAAKX,MAAMH,YACnBtJ,YAAaoK,KAAKpK,YAClBC,cAAemK,KAAKX,MAAMxJ,cAC1BmL,QAAShB,KAAKL,wBA5JxB,GAAqCsB,IAAMC,WCR9BC,GAAb,YACE,WAAYnQ,GAAQ,IAAD,8BACjB,4CAAMA,KAORoQ,kBAAoB,WAClB,IAAIC,EAAMzP,IAAKkN,MAAMU,eAAe,EAAK8B,OAAO3N,SAC5C4N,EAAM3P,IAAKkN,MAAMU,eAAe,EAAKgC,OAAO7N,SAEhD,EAAKpC,GAAGkN,WAAWjH,KAAK,UACxB,EAAKjG,GAAGqN,OAAO,UAAYyC,EAE3B,EAAK9P,GAAGkN,WAAWjH,KAAK,UACxB,EAAKjG,GAAGqN,OAAO,UAAY2C,GAd3B,EAAKD,OAASL,IAAMpB,YACpB,EAAK2B,OAASP,IAAMpB,YACpB,EAAKtO,GAAKK,IAAKkN,MAAMgB,WACrB,EAAKtO,KAAO,kBALK,EADrB,sEAsBI,OACE,6BACE,2BAAO+C,IAAKyL,KAAKsB,QACf,+CACA,+BACE,4BACE,qCACA,qCACA,qCACA,uCAGJ,+BACE,4BACE,uCACA,uCACA,2CACA,wCAEF,4BACE,uCACA,uCACA,uCACA,wCAEF,4BACE,wBAAIG,QAAQ,KAAZ,WAEA,uCACA,yCAGJ,+BACE,4BACE,wCACA,wCACA,wCACA,2CAIN,6BACA,6BACA,6BACA,yBAAKlN,IAAKyL,KAAKwB,QACb,+BACE,+CACA,+BACE,4BACE,qCACA,uCAGJ,+BACE,4BACE,uCACA,wCAEF,4BACE,uCACA,wCAEF,4BACE,uCACA,yCAGJ,+BACE,4BACE,wCACA,2CAIN,6BACA,6BACA,6BACA,+BACE,+BACE,4BACE,yCACA,2CAGJ,+BACE,4BACE,2CACA,4CAEF,4BACE,2CACA,4CAEF,4BACE,2CACA,6CAGJ,+BACE,4BACE,4CACA,gDAKR,kBAAC,EAAD,CAAgBjQ,GAAIyO,KAAKzO,GAAIC,KAAMwO,KAAKxO,OACxC,6BACA,6BACA,kCAnIR,GAAiCyP,IAAMC,WCH5BQ,GAAiB,kBAC1B,6BACE,4JCJJ,SAASC,KAA2Q,OAA9PA,GAAW5L,OAAO6L,QAAU,SAAU3D,GAAU,IAAK,IAAI4D,EAAI,EAAGA,EAAIC,UAAU3I,OAAQ0I,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAI1M,KAAO4M,EAAchM,OAAOiM,UAAUC,eAAeC,KAAKH,EAAQ5M,KAAQ8I,EAAO9I,GAAO4M,EAAO5M,IAAY,OAAO8I,IAA2BkE,MAAMnC,KAAM8B,WAEhT,SAASM,GAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE5M,EAAK0M,EAAnE5D,EAEzF,SAAuC8D,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D5M,EAAK0M,EAA5D5D,EAAS,GAAQqE,EAAavM,OAAOC,KAAK+L,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAWnJ,OAAQ0I,IAAO1M,EAAMmN,EAAWT,GAAQQ,EAASE,QAAQpN,IAAQ,IAAa8I,EAAO9I,GAAO4M,EAAO5M,IAAQ,OAAO8I,EAFxMuE,CAA8BT,EAAQM,GAAuB,GAAItM,OAAO0M,sBAAuB,CAAE,IAAIC,EAAmB3M,OAAO0M,sBAAsBV,GAAS,IAAKF,EAAI,EAAGA,EAAIa,EAAiBvJ,OAAQ0I,IAAO1M,EAAMuN,EAAiBb,GAAQQ,EAASE,QAAQpN,IAAQ,GAAkBY,OAAOiM,UAAUW,qBAAqBT,KAAKH,EAAQ5M,KAAgB8I,EAAO9I,GAAO4M,EAAO5M,IAAU,OAAO8I,EAMne,IAAI2E,GAEJ,IAAMC,cAAc,OAAQ,CAC1BC,EAAG,+VAGD,GAEJ,IAAMD,cAAc,OAAQ,CAC1BC,EAAG,yMAGD,GAAe,SAAsBC,GACvC,IAAIC,EAASD,EAAKC,OACdrM,EAAQoM,EAAKpM,MACb3F,EAAQoR,GAAyBW,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAOlB,GAAS,CACzCsB,QAAS,cACT1O,IAAKyO,GACJhS,GAAQ2F,EAAQ,IAAMkM,cAAc,QAAS,KAAMlM,GAAS,KAAMiM,GAAO,KAG1EM,GAAa,IAAMC,YAAW,SAAUnS,EAAOuD,GACjD,OAAO,IAAMsO,cAAc,GAAclB,GAAS,CAChDqB,OAAQzO,GACPvD,O,IAEU,I,iBC1BJoS,GAAS,WAAO,IAAD,EACQC,mBAAS,eADjB,mBACnBhS,EADmB,KACRuM,EADQ,KAGpB0F,EAAU,SAAA9R,GAAI,OAAI,WACpBoM,EAAapM,KAGf,OACE,yBAAKC,UAAWU,KAAOoR,SACrB,4BAAQ9R,UAAWU,KAAO6M,QACxB,wBAAIvN,UAAWU,KAAOqR,KACpB,4BAAI,4BAAQ9R,QAAS4R,EAAQ,eAAgB7R,UAAyB,gBAAdJ,EAA8Bc,KAAOsR,OAAS,IAAlG,wHACJ,4BAAI,4BAAQ/R,QAAS4R,EAAQ,WAAY7R,UAAyB,YAAdJ,EAA0Bc,KAAOsR,OAAS,IAA1F,gFACJ,4BAAI,4BAAQ/R,QAAS4R,EAAQ,cAAe7R,UAAyB,eAAdJ,EAA6Bc,KAAOsR,OAAS,IAAhG,4FAIR,0BAAMhS,UAAWU,KAAOuR,MACtB,kBAAC3S,EAAD,CAAYM,UAAWA,GACrB,kBAAC,GAAD,CAAiBD,QAAQ,gBACzB,kBAAC,GAAD,CAAaA,QAAQ,YACrB,kBAAC,GAAD,CAAgBA,QAAQ,iBAI5B,4BAAQK,UAAWU,KAAOwR,QACxB,6BACE,qEACA,kBAAC,GAAD,CAAWrN,MAAM,KAAKf,OAAO,QAE/B,6BACE,yCAAc,uBAAG4K,KAAK,0DAA0DlC,OAAO,SAAS2F,IAAI,uBAAtF,oBACd,kDACA,iD,MCtCVC,IAAS9M,OACP,mBCHe,kBAAM,kBAAC,GAAD,QDGrB,MACA+M,SAASC,eAAe,W","file":"static/js/main.7ef64a40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"PageDeclaration_description__aWA76\",\"hint\":\"PageDeclaration_hint__3CemT\",\"chooseWrapper\":\"PageDeclaration_chooseWrapper__20Jnf\",\"tabs\":\"PageDeclaration_tabs__2lOgh\",\"tab\":\"PageDeclaration_tab__UCmY8\",\"activeTab\":\"PageDeclaration_activeTab__WnhTM\",\"downloadBtn\":\"PageDeclaration_downloadBtn__LsXWx\",\"table\":\"PageDeclaration_table__1Xd0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2dOTA\",\"header\":\"Layout_header__1V-LV\",\"main\":\"Layout_main__3OBIG\",\"footer\":\"Layout_footer__7ZyTp\",\"nav\":\"Layout_nav__MNzL5\",\"active\":\"Layout_active__2dZwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AskRatesPopup_title__3dJGc\",\"description\":\"AskRatesPopup_description__30602\",\"fieldWrapper\":\"AskRatesPopup_fieldWrapper__2TKFZ\",\"table\":\"AskRatesPopup_table__GDUF_\",\"country\":\"AskRatesPopup_country__SI7JY\",\"button\":\"AskRatesPopup_button__2zEyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"DownloadButton_button__1Cj9n\"};","module.exports = __webpack_public_path__ + \"static/media/input__Argix_4Q_2019.531e4a9a.xlsx\";","module.exports = __webpack_public_path__ + \"static/media/output__Argix_Declaration_4Q .80cd347d.xlsx\";","export let TabContent = props => {\n  return props.children.map(child=>{\n    if( child.props.tabName !== props.activeTab ) return null;\n\n    return child;\n  })\n};\n","import React from 'react';\nimport { saveAs } from 'file-saver';\nimport XLSX from 'xlsx';\nimport styles from './DownloadButton.module.scss';\n\n\nexport let DownloadButton = props => {\n  let { wb, name, children, className } = props;\n\n  let download = () => {\n    var wbout = XLSX.write(wb, { bookType:'xlsx', bookSST:false, type:'array' });\n    saveAs(new Blob([wbout],{type:\"application/octet-stream\"}), name);\n  };\n\n  return (\n    <button onClick={download} className={`${styles.button} ${className}`}>{children || 'скачать .xlsx'}</button>\n  );\n};\n","/**\n * 123.45628 => 123.4563\n * 0.00004 => 0.0000\n * 1.23e+5 => 123000.0000\n */\nexport let financial = value => {\n  return +Number.parseFloat(value).toFixed(4);\n}\n\n\n/**\n * 15.23 => 15,23\n * comma() - нужны строки с запятыми без пробелов, чтобы при копировании в гугл-таблицы - таблица\n * корректно воспринимала данные и могла с ними обращаться как с числами (суммировать при выделении и т.д.).\n */\nexport let coma = str => {\n  if(!str) return null;\n\n  return String(str).replace(/\\./, ',');\n}\n\n\n/**\n * 10500.50 => 10 000,5000\n */\nexport let localeNumber = value => {\n  let numberValue = financial(value);\n  return numberValue.toLocaleString('ru', {minimumFractionDigits: 4});\n  // return numberValue.toLocaleString();\n}\n","import React, { useEffect, useRef } from 'react';\nimport { financial, localeNumber } from 'calculating/helpers';\nimport styles from './PageDeclaration.module.scss';\n\n\nexport let WSDeclaration = props => {\n  let { WSdata, month, saveRef } = props;\n  let { countries, totalNetSaleBefore, totalTaxBefore, totalNetSaleAfter, totalTaxAfter, totalNetSale_EU, totalNetSale_nonEU } = WSdata;\n  let tableElement = useRef(null);\n\n  useEffect(() => {\n    saveRef(tableElement.current, month);\n  }, [month, saveRef]);\n\n  if(!Array.isArray(countries)) {\n    console.log(`WSDeclaration[${month}] - no data`);\n    return null;\n  }\n\n\n\n\n  let diffNetSale = financial(financial(totalNetSaleBefore/100) - financial(totalNetSaleAfter/100));\n  let diffTax = financial(financial(totalTaxAfter/100) - financial(totalTaxBefore/100));\n\n  totalNetSaleBefore = localeNumber(totalNetSaleBefore / 100);\n  totalTaxBefore = localeNumber(totalTaxBefore / 100);\n  totalNetSaleAfter = localeNumber(totalNetSaleAfter / 100);\n  totalTaxAfter = localeNumber(totalTaxAfter / 100);\n  totalNetSale_EU = localeNumber(totalNetSale_EU / 100);\n  totalNetSale_nonEU = localeNumber(totalNetSale_nonEU / 100);\n\n  let sortData = countries\n    .concat() //copy array before sorting, because .sort() is muttable method\n    .sort(function(a, b){\n      if (a.type === 'EU') {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n  return (\n    <>\n      <table ref={tableElement} className={styles.table}>\n        <thead>\n          <tr>\n            <td>SALES</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>Ref</td>\n            <td>Inv #</td>\n            <td>Date</td>\n            <td>Counterparty</td>\n            <td>Amount as per Invoice</td>\n            <td>Basis for VAT</td>\n            <td>Monthly Rate</td>\n            <td>Amount in EUR</td>\n            <td>Goods/Services</td>\n            <td>Country</td>\n            <td>EU/Non EU</td>\n            <td>VAT Number</td>\n            <td>Rate</td>\n            <td>Tax</td>\n          </tr>\n        </thead>\n        <tbody>\n          {sortData.map((row, idx) => {\n            let { netSale, basis_for_VAT, name, type, rate, tax } = row || {};\n            netSale = financial(netSale / 100);\n            basis_for_VAT = financial(basis_for_VAT / 100);\n            tax = financial(tax / 100);\n\n            // let str = String(netSale / 100);\n            // let arr = str.split('.');\n            // let afterComma = arr[1];\n            // if (afterComma && afterComma.length > 2) {\n            //   afterComma = afterComma.slice(0, 2);\n            //   netSale = `${arr[0]}.${afterComma}`;\n            // }\n\n\n            const netSaleStyle = {\n              backgroundColor: netSale < 0 ? 'red' : '',\n              color: netSale < 0 ? 'white' : '',\n            };\n\n            const lowNetSaleStyle = {\n              backgroundColor: netSale < 0.01 ? '#dedcf1' : '',\n            };\n\n            return (\n              <tr key={idx} style={lowNetSaleStyle}>\n                <td>{idx+1}</td>\n                <td>-</td>\n                <td>-</td>\n                <td>Individuals</td>\n                <td style={netSaleStyle}>{netSale}</td>{/* С НДС */ }\n                <td>{basis_for_VAT}</td>{/* без НДС */ }\n                <td>{String('1.0000')}</td>\n                <td>{netSale}</td>\n                <td>Service</td>\n                <td>{name}</td>\n                <td>{type}</td>\n                <td>n/a</td>\n                <td>{rate || '-'}</td>{/* СТАВКА НДС */ }\n                <td>{tax || '-'}</td>{/* НДС к оплате */ }\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td style={{fontWeight: 'bold'}}>result sum {totalNetSaleAfter}</td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td style={{fontWeight: 'bold'}}>result sum {totalTaxAfter}</td>\n          </tr>\n          <tr style={{height: '1em'}}>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n          </tr>\n          <tr style={{height: '1em'}}></tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td style={{fontWeight: 'bold'}}>initial sum {totalNetSaleBefore}</td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td style={{fontWeight: 'bold'}}>initial sum {totalTaxBefore}</td>\n          </tr>\n          <tr style={{height: '1em'}}>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td style={{textAlign: 'right'}}>diff {diffNetSale}</td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td style={{textAlign: 'right'}}>diff {diffTax}</td>\n          </tr>\n          <tr style={{height: '1em'}}>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n            <td rowSpan='2'>{null}</td>\n          </tr>\n          <tr style={{height: '1em'}}></tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>VAT</td>\n            <td>TOTAL</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>Total EU SALES (Services)</td>\n            <td style={{fontWeight: 'bold'}}>€ {totalNetSale_EU}</td>\n            <td style={{fontWeight: 'bold'}}>€ {totalTaxAfter}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>Total NON EU SALES (Services)</td>\n            <td style={{fontWeight: 'bold'}}>€ {totalNetSale_nonEU}</td>\n            <td>-</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>Total Local Sales</td>\n            <td style={{fontWeight: 'bold'}}>€ 0.00</td>\n            <td>-</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>Total EU SALES (Goods)</td>\n            <td style={{fontWeight: 'bold'}}>€ 0.00</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>Total NON EU SALES (Goods)</td>\n            <td style={{fontWeight: 'bold'}}>€ 0.00</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n          <tr>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>Total</td>\n            <td style={{fontWeight: 'bold'}}>€ {totalNetSaleAfter}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n            <td>{null}</td>\n          </tr>\n        </tfoot>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport Popup from \"reactjs-popup\";\nimport { Form, Field } from 'react-final-form';\nimport styles from './AskRatesPopup.module.scss';\n\n\nexport let AskRatesPopup = props => {\n  let { isOpen, setNewRates, countriesRate, ...other } = props;\n\n  if (!isOpen) return null;\n\n  let countries = Object.keys(countriesRate);\n  let months = Object.keys(countriesRate[countries[0]]);\n\n  let onSubmit = values => {\n    setNewRates(values);\n  };\n\n  let overrideModalStyles = {\n    width: 'auto',\n    minHeight: '500px',\n    backgroundColor: '#fff',\n    padding: '1em',\n    borderRadius: '6px',\n    border: '1px solid transparent',\n  };\n\n  return (\n    <Popup\n      open={true}\n      closeOnDocumentClick={true}\n      closeOnEscape={true}\n      contentStyle={overrideModalStyles}\n      {...other}\n    >\n      <>\n        <h1 className={styles.title}>Укажите актуальные Rate-ы, %</h1>\n        <br/>\n        <p className={styles.description}>Десятые указывать через точку(!), например так \"19.5\" <br/> Знак процентов ставить не нужно.</p>\n        <br/>\n        <br/>\n        <Form\n          onSubmit={onSubmit}\n          render={({ handleSubmit }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <table className={styles.table}>\n                  <thead>\n                    <tr>\n                      <td><span className={styles.country}>Страна</span> \\ месяц =></td>\n                      {months.map(month => <td key={month}>{month}</td>)}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {countries.map(countryName=>(\n                      <tr key={countryName} className={styles.fieldWrapper}>\n                        <td>{countryName}</td>\n                        <MonthFieldsPerCountry allCountries={countriesRate} countryName={countryName} />\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <br/>\n                <br/>\n                <button type='submit' className={styles.button}>Далее</button>\n              </form>\n            );\n          }}\n        />\n      </>\n    </Popup>\n  );\n};\n\n\n\nlet MonthFieldsPerCountry = props => {\n  let { allCountries, countryName } = props;\n  let monthRates = allCountries[countryName];\n  let fields = [];\n\n  for (let month in monthRates) {\n    let rate = monthRates[month];\n\n    fields.push(\n      <td key={month}>\n        <Field\n          name={`${countryName}.${month}`}\n          component='input'\n          type='text'\n          initialValue={rate}\n        />\n      </td>\n    );\n  }\n\n  return fields;\n};\n","import { financial } from 'calculating/helpers';\n\nexport let getTax = (netSale, rate) => {\n  return financial(netSale * rate / (100 + rate));\n}\n","import { financial } from 'calculating/helpers';\nimport { getTax } from './getTax';\n\nexport let fillCountriesObj = (WSrows, countriesRate) => {\n  let countries = {};\n\n  /**\n   * Проходимся по каждой строке и группируем страны в ключи объекта countries.\n   *\n   * Суммируем всех netSale для каждой отдельной страны.\n   * netSale предварительно умножаем на 100, чтобы все дальнейшие вычисления происходили\n   * в копейках (для уменьшения погрешности). При выводе результатов во вьюхах, все\n   * зависимые и вычисляемые значения от netSale следует поделить на 100.\n   */\n  WSrows.forEach(row=>{\n    let name = row[7]; // имя страны восьмая колонка в эксельке\n    let type = row[8]; // тип страны девятая колонка в эксельке\n    let netSale = financial(row[5] * 100); // ставка с НДС шестая колонка в эксельке\n    let rate = type === 'EU' && (parseFloat(countriesRate[name]) || 0);\n\n    if(countries[name]) {\n      countries[name] = {\n        ...countries[name],\n        netSale: financial(countries[name].netSale + netSale),\n      }\n    } else {\n      countries[name] = {\n        name, // имя страны\n        type, // EU / non EU\n        rate, // ставка НДС\n        netSale, // С НДС\n        basis_for_VAT: null, // БЕЗ НДС\n        tax: null // НДС к оплате\n      }\n    }\n  });\n\n\n  /**\n   * Расчитываем basis_for_VAT и tax для каждой страны на основе\n   * их суммарного netSale (вычисленного на предыдущем шаге).\n   */\n  Object.values(countries).forEach(country=>{\n    country.basis_for_VAT = financial((country.netSale / (country.rate + 100)) * 100);\n    country.tax = getTax(country.netSale, country.rate);\n  });\n\n\n  return countries;\n}\n","import { financial } from 'calculating/helpers';\nimport { getTax } from './getTax';\n\nexport let removeMinusFromEUCountries = countries => {\n  const MAX_DIFF_TOTAL_TAX = 0.03;\n\n  let totalNetSaleBefore = 0; // сумма всех netSale до удаления \"минусовых EU стран\"\n  let totalTaxBefore = 0; // сумма всех tax до удаления \"минусовых EU стран\"\n  let totalTaxMinus = 0; // сумма минусовых tax\n  let countryNamesWithMinus = []; // имена EU стран с минусовым netSale\n  let totalRateOfCountriesWithPlus = 0; // сумарный rate всех \"плюсовых EU стран\"\n\n  // подготавливаем нужные выше данные:\n  Object.values(countries).forEach(country=>{\n    if (country.type !== 'EU') return null;\n\n    totalNetSaleBefore = financial(totalNetSaleBefore + country.netSale);\n    totalTaxBefore = financial(totalTaxBefore + country.tax);\n\n    if (country.netSale < 0) {\n      totalTaxMinus = financial(totalTaxMinus + country.tax);\n      countryNamesWithMinus.push(country.name);\n    } else {\n      totalRateOfCountriesWithPlus = financial(totalRateOfCountriesWithPlus + country.rate);\n    }\n  });\n\n  // удаляем \"минусовые EU страны\" из объекта countries\n  countryNamesWithMinus.forEach(name=>{\n    delete countries[name];\n  });\n\n\n  /**\n   * Вымученным хитрожопым способом, корректируем netSale каждой EU-страны, чтобы сумма netSale до удаления\n   * была строго равна сумме netSale после удаления \"минусовых EU-стран\". При этом, чтобы разница сумм tax\n   * до удаления \"минусовых EU-стран\" и после, - была минимальной (в пределах MAX_DIFF_TOTAL_TAX).\n   *\n   * Пример exel-таблички с расчётами лежит в корне проекта (example-declaration-remove-minus-country.xlsx)\n   */\n  doMagic();\n\n  function doMagic(){\n    findSkippingCountries();\n\n    /**\n     * Добавляем skip-флаг странам, tax которых после магических преобразований будет минусовым.\n     * Если tax оказался минусовым, значит netSale этих стран не корректируем.\n     */\n    function findSkippingCountries(){\n      if ( isExistCountryWithNewMinusTax(countries, totalTaxMinus, totalRateOfCountriesWithPlus) ) {\n        Object.values(countries).forEach(country=>{\n          if (country.type !== 'EU') return null;\n\n          addSkipFlagToCountry(countries, totalTaxMinus, totalRateOfCountriesWithPlus);\n          totalRateOfCountriesWithPlus = calculateTotalRateOfCountriesWithPlus(countries);\n          findSkippingCountries();\n        });\n      }\n    }\n\n\n    /**\n    * Обновляем netSale и tax для каждой EU страны,\n    * чтобы сумма tax до удаления \"минусовых EU стран\"\n    * была равна сумме tax после удаления \"минусовых EU стран\".\n    */\n    Object.values(countries).forEach(country=>{\n      if (country.type !== 'EU') return null;\n      if (country.skip) return null;\n\n      country.tax = country.tax - getDiffTax(country.rate, totalRateOfCountriesWithPlus, totalTaxMinus);\n      country.netSale = getNewNetSale(country.tax, country.rate);\n    });\n\n\n\n\n    let { diffTotalNetSale } = getTotalResults(countries, totalNetSaleBefore, totalTaxBefore);\n\n\n    // массив EU стран с минимальными рейтами\n    let countriesWitnMinRate = Object\n      .values(countries)\n      .filter(country=>country.type === 'EU')\n      .reduce((acc, country)=>{\n        if (acc.length < 1) {\n          return [country];\n        }\n\n        if (country.rate < acc[0].rate) {\n          return [country];\n        }\n\n        if (country.rate === acc[0].rate) {\n          return [...acc, country];\n        }\n\n        return acc;\n      }, []);\n\n    //@todo проверка, чтоб оставшиюся разницу netSale раскидывать только на те страны\n    // с минимальными рейтами, у которых достаточно этих netSale\n    // (чтоб не образовался новый минус, от которых мы так тяжело избавлялись)\n\n    // сумма netSale у стран с минимальными рейтами\n    let totalNetSaleWitnMinRate = 0;\n    countriesWitnMinRate.forEach(country => {\n      totalNetSaleWitnMinRate = financial(totalNetSaleWitnMinRate + country.netSale);\n    });\n\n\n    /**\n    * Раскидываем оставшеюся разницу diffTotalNetSale (после удаления \"минусовых EU стран\")\n    * на страны с минимальными рейтами (пропорционально их начальным netSale).\n    *\n    * Цель - чтобы итоговая сумма netSale до удаления \"минусовых EU стран\"\n    * была строго равна сумме netSale после удаления \"минусовых EU стран\".\n    *\n    * При этом суммы tax до и после удаления \"минусовых EU стран\" будут не равны,\n    * а с максимальной погрешностью MAX_DIFF_TOTAL_TAX.\n    */\n    countriesWitnMinRate.forEach(country => {\n      let diffNetSaleProportion = financial((country.netSale * diffTotalNetSale) / totalNetSaleWitnMinRate);\n      country.netSale = financial(country.netSale + diffNetSaleProportion);\n      country.tax = getTax(country.netSale, country.rate);\n    });\n\n\n\n    let { diffTotalTax } = getTotalResults(countries, totalNetSaleBefore, totalTaxBefore);\n\n\n    /**\n     * Если в итоге разница сумм tax до и после удаления \"минусовых EU стран\" нас устраивает - то заканчиваем расчёты.\n     * Если разница больше чем мы можем себе позволить, то\n     * - обновляем минусовый tax который надо рааскидать (который нас не устроил)\n     * - повторяем алгоритм (рекурсивно вызываем ту же функцию doMagic)\n     */\n    if ( Math.abs(diffTotalTax) > (MAX_DIFF_TOTAL_TAX * 100) ) {\n      totalTaxMinus = diffTotalTax;\n      doMagic();\n    }\n  }\n\n\n\n  return countries;\n}\n\n\n\n/**\n * Расчитываем новый tax, и смотрим - отрицательный он или нет.\n */\nfunction newTaxIsMinus(country, totalTaxMinus, totalRateOfCountriesWithPlus){\n  let diffTax = getDiffTax(country.rate, totalRateOfCountriesWithPlus, totalTaxMinus);\n  let newTax = country.tax - diffTax;\n  return newTax <= 0 ? true : false;\n}\n\n\n\nfunction getNewNetSale(tax, rate){\n  return financial( (tax*(100+rate)) / rate );\n}\n\n\n\n/**\n * Смотрим, будет ли после магических преобразований хоть одна страна с новым отрицательным tax-ом.\n * Если да - то эта netSale этой страны не годится для корректировок. Не трогаем эту страну.\n */\nfunction isExistCountryWithNewMinusTax(countries, totalTaxMinus, totalRateOfCountriesWithPlus){\n  return Object\n    .values(countries)\n    .filter(country => country.type === 'EU')\n    .filter(country => !country.skip)\n    .some(country => {\n      if ( newTaxIsMinus(country, totalTaxMinus, totalRateOfCountriesWithPlus) ) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n}\n\n\n\nfunction addSkipFlagToCountry(countries, totalTaxMinus, totalRateOfCountriesWithPlus){\n  Object.values(countries).forEach(country=>{\n    if (country.type !== 'EU') return null;\n    if (country.skip) return null;\n\n    if ( newTaxIsMinus(country, totalTaxMinus, totalRateOfCountriesWithPlus) ) {\n      country.skip = true;\n    }\n  });\n}\n\n\n\n/**\n * Подсчитываем общий rate всех не \"skip-нутых\" EU стран\n */\nfunction calculateTotalRateOfCountriesWithPlus(countries){\n  let totalRateOfCountriesWithPlus = 0;\n\n  Object.values(countries).forEach(country=>{\n    if (country.type !== 'EU') return null;\n    if (country.skip) return null;\n\n    totalRateOfCountriesWithPlus = financial(totalRateOfCountriesWithPlus + country.rate);\n  });\n\n  return totalRateOfCountriesWithPlus;\n}\n\n\n\n/**\n * Есть общий минусовый tax, который надо раскидать на остальные tax, которые остались после удаления минусовых стран.\n * Есть rate текущей страны.\n * Есть суммарный рейт всех плюсовых не \"skip-нутых\" стран.\n * Относительно этих данных считаем ЧИСЛО, которое нужно будет отнять от tax-а текущей страны,\n * чтобы потом сумма tax-ов до удаления была равна сумме tax-ов после удаления \"минусовых EU\" стран.\n */\nfunction getDiffTax(rate, totalRateOfCountriesWithPlus, totalTaxMinus){\n  return financial(Math.abs(totalTaxMinus) * rate / totalRateOfCountriesWithPlus);\n}\n\n\n\n/**\n * Получаем объект с двумя полями:\n * diffTotalNetSale - разница сумм netSale до и после удаления \"минусовых EU стран\".\n * diffTotalTax - разница сумм tax до и после удаления \"минусовых EU стран\".\n */\nfunction getTotalResults(countries, totalNetSaleBefore, totalTaxBefore){\n  let totalNetSaleAfter = 0; // сумма всех netSale после удаления \"минусовых EU стран\"\n  let totalTaxAfter = 0; // сумма всех tax после удаления \"минусовых EU стран\"\n\n  Object.values(countries).forEach(country=>{\n    if (country.type !== 'EU') return null;\n\n    totalNetSaleAfter = financial(totalNetSaleAfter + country.netSale);\n    totalTaxAfter = financial(totalTaxAfter + country.tax);\n  });\n\n  let diffTotalNetSale = financial(totalNetSaleBefore - totalNetSaleAfter);\n  let diffTotalTax = financial(totalTaxBefore - totalTaxAfter);\n\n  return {\n    diffTotalNetSale,\n    diffTotalTax\n  };\n}\n","import { financial } from 'calculating/helpers';\nimport { getTax } from './getTax';\n\n\nexport let removeMinusFromNonEUCountries = countries => {\n  let nonEUCountries = Object.values(countries).filter(country => country.type !== 'EU');\n\n  let totalPositiveNetSale = nonEUCountries.reduce((acc, currentCountry) => {\n    if (currentCountry.netSale < 0) return acc;\n    return acc + currentCountry.netSale;\n  } , 0);\n\n  let totalNegativeNetSale = nonEUCountries.reduce((acc, currentCountry) => {\n    if (currentCountry.netSale > 0) return acc;\n    return acc + currentCountry.netSale;\n  } , 0);\n\n  totalNegativeNetSale = Math.abs(totalNegativeNetSale);\n\n\n  /**\n   * Если сумма отрицательных netSale больше суммы положительных netSale, то раскидывать эти минуса негде\n   * у non EU стран. Поэтому эту разницу кидаем в EU страну с минимальным рейтом.\n   * При этом все non EU страны удаляем.\n   */\n  if (totalNegativeNetSale > totalPositiveNetSale) {\n    let updateCountries = setNegativeNetSaleToEUCountries(countries, totalNegativeNetSale, totalPositiveNetSale);\n\n    for (let key in updateCountries) {\n      if (updateCountries[key].type !== 'EU') {\n        delete updateCountries[key];\n      }\n    }\n\n    return updateCountries;\n  }\n\n\n  let countryNamesWithMinus = [];\n  Object.values(countries).forEach(country=>{\n    if (country.type === 'EU') return null;\n\n    if (country.netSale < 0) {\n      countryNamesWithMinus.push(country.name);\n    }\n  });\n\n  // удаляем минусовые non-EU страны\n  countryNamesWithMinus.forEach(name=>{\n    delete countries[name];\n  });\n\n  // пропорционально раскидываем сумму удалённых минусов на оставшиеся пложительные non-EU страны\n  Object\n    .values(countries)\n    .filter(country => country.type !== 'EU')\n    .forEach(country => {\n      country.netSale = financial(country.netSale - (country.netSale * totalNegativeNetSale) / totalPositiveNetSale);\n    });\n\n  return countries;\n};\n\n\n\nfunction setNegativeNetSaleToEUCountries(countries, totalNegativeNetSale, totalPositiveNetSale) {\n  let diff = totalNegativeNetSale - totalPositiveNetSale;\n\n  let countryWithMinRate = {rate: Infinity};\n\n  Object\n    .values(countries)\n    .filter(country => country.type === 'EU')\n    .forEach(country => {\n      if (country.netSale < diff) return false;\n\n      if (countryWithMinRate.rate > country.rate) {\n        countryWithMinRate = country;\n        return true;\n      }\n    });\n\n  let newNetSale = countryWithMinRate.netSale - diff;\n\n  countryWithMinRate.netSale = newNetSale;\n  countryWithMinRate.basis_for_VAT = (countryWithMinRate.netSale / (countryWithMinRate.rate + 100)) * 100;\n  countryWithMinRate.tax = getTax(countryWithMinRate.netSale, countryWithMinRate.rate);\n\n  return countries;\n}\n","import { financial } from 'calculating/helpers';\n\n\nexport let getSums = countries => {\n  let totalNetSale = 0;\n  let totalTax = 0;\n\n  Object.values(countries).forEach(country=>{\n    totalNetSale = financial(totalNetSale + country.netSale);\n    totalTax = financial(totalTax + country.tax);\n  });\n\n  return {\n    totalNetSale,\n    totalTax\n  };\n};\n\n\nexport let getSumNetSaleEU = countries => {\n  let totalNetSale = 0;\n\n  Object.values(countries).forEach(country=>{\n    if (country.type !== 'EU') return null;\n    totalNetSale = financial(totalNetSale + country.netSale);\n  });\n\n  return totalNetSale\n};\n\n\nexport let getSumNetSaleNonEU = countries => {\n  let totalNetSale = 0;\n\n  Object.values(countries).forEach(country=>{\n    if (country.type === 'EU') return null;\n    totalNetSale = financial(totalNetSale + country.netSale);\n  });\n\n  return totalNetSale\n};\n","export const MONTHS = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December'\n};\n\nexport const RATES = {\n  Austria: 20,\n  Denmark: 25,\n  Belgium: 6,\n  Bulgaria: 20,\n  Germany: 19,\n  Finland: 10,\n  France: 2.1,\n  Italy: 4,\n  Netherlands: 21,\n  Portugal: 6,\n  Sweden: 6,\n  Spain: 21,\n  'United Kingdom': 20,\n};\n","import { fillCountriesObj } from './fillCountriesObj';\nimport { removeMinusFromEUCountries } from './removeMinusFromEUCountries';\nimport { removeMinusFromNonEUCountries } from './removeMinusFromNonEUCountries';\nimport { getSums, getSumNetSaleEU, getSumNetSaleNonEU } from './getSums';\nimport { createLastTab } from './createLastTab';\nimport { MONTHS } from './constants';\n\n\nexport let calculateDeclaration = (data, countriesRate) => {\n  let { DB } = data || {}; // берём нижнюю вкладку с именем DB из эксельки\n\n  if (!Array.isArray(DB)) {\n    console.log('calculateDeclaration - no DB');\n  }\n\n  let monthsNumbers = Object.keys(MONTHS);\n  let WorkSheetsRaw = {};\n  let WorkSheetsResult = {};\n\n\n\n  /**\n   * Группируем строки с одинаковыми месяцами и наполняем объект WorkSheetsRaw[имя_месяца] этими строками\n   * WorkSheetsRaw = {\n   *   January: [... строки только с январём, {}, {}, {} ...],\n   *   February: [... строки только с февралём, {}, {}, {} ...],\n   *   March: [... строки только с мартом, {}, {}, {} ...],\n   *   и т.д.\n   * };\n   */\n  monthsNumbers.forEach(monthNumber=>{\n    WorkSheetsRaw[MONTHS[monthNumber]] = DB.filter(row=>{\n      let lastIndex = row.length - 1;\n\n      return row[lastIndex] === parseInt(monthNumber, 10);\n    });\n  });\n\n\n  /**\n   * Создаём объект WorkSheetsResult с месяцами; в каждом месяце массив\n   * объектов (будущие строки для таблицы) с данными.\n   * Каждый месяц - это отдельная нижняя вкладка в будущей табличке.\n   */\n  for (let [WSname, WSrows] of Object.entries(WorkSheetsRaw)) {\n    let month = WSname;\n\n    if (WSrows.length > 0) {\n      let countriesRatePerMonth = getCountriesRatePerMonth(month, countriesRate);\n      WorkSheetsResult[month] = createMonthData(WSrows, countriesRatePerMonth);\n    }\n  }\n\n  /**\n   * Создаём последнюю общую нижнюю вкладку (под названием 'To Be Paid') в будущей табличке.\n   */\n  WorkSheetsResult['To Be Paid'] = createLastTab(WorkSheetsResult);\n\n\n  return WorkSheetsResult;\n};\n\n\n/**\n * Возвращается объект:\n * { страна: rate для этого месяца }\n */\nfunction getCountriesRatePerMonth (month, countriesRate) {\n  let countriesRatePerMonth = {};\n\n  for (let countryName in countriesRate) {\n    let rate = countriesRate[countryName][month];\n    countriesRatePerMonth[countryName] = rate;\n  }\n\n  return countriesRatePerMonth;\n}\n\n\n\n/**\n * @param {array} WSrows - массив объектов (строк) одного месяца с данными\n * @param {object} countriesRate - объект {страна : её rate}\n *\n */\nfunction createMonthData(WSrows, countriesRate) {\n  if(!Array.isArray(WSrows)) {\n    console.log('createTableData - no WSrows');\n  }\n\n  /**\n   * Создаём и наполняем объект countries на основании строк WSrows и рейтов countriesRate.\n   * Ключи объекта - это страны. Каждая страна с такими полями:\n   *  countries[name] = {\n        name, // имя страны\n        type, // EU / non EU\n        rate, // ставка НДС\n        netSale, // С НДС\n        basis_for_VAT: null, // БЕЗ НДС\n        tax: null // НДС к оплате\n      }\n   */\n  let countries = fillCountriesObj(WSrows, countriesRate);\n\n  // считаем суммы netSale и tax до удаления \"минусовых стран\"\n  let { totalNetSale: totalNetSaleBefore, totalTax: totalTaxBefore } = getSums(countries);\n\n  // удаление \"минусовых non-eu стран\" (с отрицательным netsale)\n  countries = removeMinusFromNonEUCountries(countries);\n\n  // удаление \"минусовых eu стран\" (с отрицательным netsale)\n  countries = removeMinusFromEUCountries(countries);\n\n  // считаем суммы netSale и tax после удаления \"минусовых стран\"\n  let { totalNetSale: totalNetSaleAfter, totalTax: totalTaxAfter } = getSums(countries);\n\n  // считаем суммы netSale после удаления \"минусовых стран\" отдельно для EU и nonEU стран\n  let totalNetSale_EU = getSumNetSaleEU(countries);\n  let totalNetSale_nonEU = getSumNetSaleNonEU(countries);\n\n\n\n  let result = {\n    countries: Object.values(countries),\n    totalNetSaleBefore,\n    totalTaxBefore,\n    totalNetSaleAfter,\n    totalTaxAfter,\n    totalNetSale_EU,\n    totalNetSale_nonEU\n  };\n\n\n  //@todo стилизация скачиваемой таблички\n  //@todo выложить в паблик для Юльки\n  return result;\n};\n","export let createLastTab = WorkSheetsResult => {\n  let countries = {};\n\n  /**\n   * Для последней вкладки суммируем данные каждой страны с предыдущих вкладок (месяцев).\n   * Допустим есть три вкладки - октябрь, ноябрь, декабрь.\n   * Если, например, в октябре не было Австрии, а в ноябре и декабре была - то в итоговую\n   * вкладку добавляем сумму данных этой страны взятых из ноября и декабря.\n   *\n   * Rate не суммируем, а берём с последнего месяца, где есть текущая страна.\n   */\n  Object.values(WorkSheetsResult).forEach((month, idx, arr) => {\n\n    month.countries.forEach(country => {\n      let existCountry = countries[country.name];\n\n      if (existCountry) {\n        existCountry.netSale = existCountry.netSale + country.netSale;\n        existCountry.basis_for_VAT = existCountry.basis_for_VAT + country.basis_for_VAT;\n        existCountry.tax = country.tax ? (existCountry.tax + country.tax) : existCountry.tax;\n      } else {\n        countries[country.name] = {...country};\n      }\n\n\n      if (idx === (arr.length - 1)) {\n        countries[country.name].rate = country.rate;\n      }\n    });\n\n  });\n\n\n  let getTotal = field => {\n    return Object.values(WorkSheetsResult).reduce((acc, month) => {\n      return acc + month[field];\n    }, 0);\n  };\n\n  /**\n   * Для последней вкладки суммируем значения данных из предыдущих вкладок (месяцев).\n   */\n  let result = {\n    countries: Object.values(countries),\n    totalNetSaleBefore: getTotal('totalNetSaleBefore'),\n    totalTaxBefore: getTotal('totalTaxBefore'),\n    totalNetSaleAfter: getTotal('totalNetSaleAfter'),\n    totalTaxAfter: getTotal('totalTaxAfter'),\n    totalNetSale_EU: getTotal('totalNetSale_EU'),\n    totalNetSale_nonEU: getTotal('totalNetSale_nonEU'),\n  };\n\n  return result;\n};\n","import { MONTHS, RATES } from './constants';\n\nexport let getAllCountries = data => {\n  let { DB } = data || {};\n\n  if (!Array.isArray(DB)) {\n    console.log('getAllCountries: calculateDeclaration - no DB');\n  }\n\n\n\n  let allMonths = [];\n\n  DB.forEach(row=>{\n    let lastIndex = row.length - 1;\n    let monthNumber = row[lastIndex];\n\n    if (monthNumber < 1 || monthNumber > 12 || !Number.isInteger(monthNumber)) {\n      console.log(`invalid month number (${monthNumber})`);\n      return null;\n    }\n\n    if (allMonths.includes([MONTHS[monthNumber]])) return null;\n\n    allMonths.push(MONTHS[monthNumber]);\n  });\n\n\n\n\n\n  /**\n   * Создаём обект:\n   * {\n   *   страна-1: { месяц-1: rate, месяц-2: rate, месяц-3: rate, }',\n   *   страна-2: { месяц-1: rate, месяц-2: rate, месяц-3: rate, }',\n   *   страна-3: { месяц-1: rate, месяц-2: rate, месяц-3: rate, }',\n   * }\n   *\n   *\n   * @todo где-то здесь сделать запрос в апи за актуальными рейтами для каждого месяца и страны\n   * @todo найти такое апи\n   */\n  let allCountries = {};\n\n  let EURows = DB.filter(row=>row[8] === 'EU');\n\n  EURows.forEach(row=>{\n    let country = row[7];\n\n    if(allCountries[country]) {\n      return false;\n    } else {\n      allCountries[country] = getRates(country, allMonths);\n    }\n  });\n\n  return allCountries;\n};\n\n\n\n/**\n * Создаём объект:\n * {\n *   месяц-1: 'rate по умолчанию',\n *   месяц-2: 'rate по умолчанию',\n *   месяц-3: 'rate по умолчанию',\n * }\n */\nfunction getRates(country, allMonths) {\n  let monthsRates = {};\n\n  allMonths.forEach(month => {\n    monthsRates[month] = RATES[country];\n  });\n\n  return monthsRates;\n}\n","import React, { createRef } from 'react';\nimport XLSX from 'xlsx';\nimport { DownloadButton } from 'components/DownloadButton';\nimport { WSDeclaration } from './WSDeclaration';\nimport { AskRatesPopup } from './AskRatesPopup';\nimport { calculateDeclaration } from 'calculating/declaration/calculateDeclaration';\nimport { getAllCountries } from 'calculating/declaration/getAllCountries';\nimport { TabContent } from 'utils/TabContent';\nimport input__xlsx from './input__Argix_4Q_2019.xlsx';\nimport output__xlsx from './output__Argix_Declaration_4Q .xlsx';\nimport styles from './PageDeclaration.module.scss';\n\n\nexport class PageDeclaration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputFile = createRef();\n    this.wb = XLSX.utils.book_new();\n    this.state = {\n      exelDataObj: {},\n      declarationData: {},\n      renderedTabs: {},\n      activeTab: null,\n      countriesRate: {},\n      isOpenPopup: false\n    };\n  }\n\n  setActiveTab = name => () => {\n    this.setState({ activeTab: name });\n  };\n\n  handleFile = e => {\n    let files = e.target.files;\n    let f = files[0];\n    let reader = new FileReader();\n    let rABS = true;\n    let result = {};\n\n    reader.onload = e => {\n      let data = e.target.result;\n\n      let workbook = XLSX.read(data, {\n        type: rABS ? 'binary' : 'array'\n      });\n\n      workbook.SheetNames.forEach((sheetName, idx) => {\n        let worksheet = workbook.Sheets[workbook.SheetNames[idx]];\n        let json = XLSX.utils.sheet_to_json(worksheet, {header:1});\n        result[sheetName] = json;\n      });\n\n      let allCountries = getAllCountries(result);\n\n      this.setState({\n        exelDataObj: result,\n        isOpenPopup: true,\n        countriesRate: allCountries,\n      });\n    };\n\n    if (rABS) {\n      reader.readAsBinaryString(f);\n    } else {\n      reader.readAsArrayBuffer(f);\n    }\n\n    return false;\n  };\n\n  setNewRates = countriesRate => {\n    let declarationData = calculateDeclaration(this.state.exelDataObj, countriesRate);\n    let ws1Name = Object.keys(declarationData)[0];\n\n    this.setState({\n      isOpenPopup: false,\n      activeTab: ws1Name,\n      countriesRate,\n      declarationData,\n    });\n  };\n\n  saveRef = (table, month) => {\n    if(this.wb.Sheets[month]) {\n      return null;\n    }\n\n    let ws = XLSX.utils.table_to_sheet(table);\n\n    this.wb.SheetNames.push(month)\n    this.wb.Sheets[month] = ws;\n\n    this.setState(prevState => ({\n      ...prevState,\n      renderedTabs: {\n        ...prevState.renderedTabs,\n        [month]: true,\n      }\n    }));\n  };\n\n  handleClosePopup = e => {\n    this.inputFile.current.value = '';\n    this.setState({\n      isOpenPopup: false,\n      exelDataObj: {},\n      countriesRate: {},\n    });\n  };\n\n  render () {\n    let WSnames = Object.keys(this.state.declarationData);\n    let isShowDownloadBtn = (WSnames.length > 0) && WSnames.every(month => {\n      return this.state.renderedTabs[month];\n    });\n\n    return (\n      <div>\n        <div className={styles.description}>\n          <h1>Расчёт декларации</h1>\n          <p><a href={input__xlsx} download>Такой</a> пример файла необходимо подать на вход. И <a href={output__xlsx} download>такой</a> вы получите после расчётов.</p>\n          <p>Важно, чтобы у входного файла был лист с названием \"DB\" с такой же структурой столбцов как в примере выше.</p>\n          <p className={styles.hint}>Раньше бухгалтер удалял минусовые страны, и руками подбирал значения netSale таким образом, чтобы суммы netSale до и после удаления минусовых стран были строго равны. А суммы tax до и после удаления минусовых стран, различались максимум на 0,03. Сейчас же - эту рутину делает программа.</p>\n\n          {WSnames.length > 0 || (\n            <div className={styles.chooseWrapper}>\n              <h2>Выберите файл .xlsx для расчёта</h2>\n              <label htmlFor='openFile'>Добавить файл ...</label>\n              <input type=\"file\" onChange={this.handleFile} id='openFile' ref={this.inputFile} />\n            </div>\n          )}\n        </div>\n        <div className={styles.tabs}>\n          {WSnames.length > 0 && WSnames.map(name => {\n            let isActive = name === this.state.activeTab ? styles.activeTab : '';\n\n            return (\n              <button\n                onClick={this.setActiveTab(name)}\n                key={name}\n                className={`${styles.tab} ${isActive}`}\n              >\n                {name}\n              </button>\n            );\n          })}\n\n          {isShowDownloadBtn && (\n            <DownloadButton\n              wb={this.wb}\n              name='table-for-darling.xlsx'\n              className={styles.downloadBtn}\n            >\n              скачать эту табличку\n            </DownloadButton>\n          )}\n        </div>\n        <TabContent activeTab={this.state.activeTab}>\n          {WSnames.map(name=>{\n            let ws = this.state.declarationData[name];\n            return (\n              <WSDeclaration WSdata={ws} month={name} key={name} saveRef={this.saveRef} tabName={name} />\n            );\n          })}\n        </TabContent>\n        <AskRatesPopup\n          isOpen={this.state.isOpenPopup}\n          setNewRates={this.setNewRates}\n          countriesRate={this.state.countriesRate}\n          onClose={this.handleClosePopup}\n        />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport XLSX from 'xlsx';\nimport { DownloadButton } from 'components/DownloadButton';\n\n\nexport class PageExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.table1 = React.createRef();\n    this.table2 = React.createRef();\n    this.wb = XLSX.utils.book_new();\n    this.name = 'test-table.xlsx';\n  }\n\n  componentDidMount = () => {\n    let ws1 = XLSX.utils.table_to_sheet(this.table1.current);\n    let ws2 = XLSX.utils.table_to_sheet(this.table2.current);\n\n    this.wb.SheetNames.push('name-1')\n    this.wb.Sheets['name-1'] = ws1;\n\n    this.wb.SheetNames.push('name-2')\n    this.wb.Sheets['name-2'] = ws2;\n  };\n\n\n  render () {\n    return (\n      <div>\n        <table ref={this.table1}>\n          <caption>my table 1</caption>\n          <thead>\n            <tr>\n              <td>col-1</td>\n              <td>col-2</td>\n              <td>col-3</td>\n              <td>col-4</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>value-1</td>\n              <td>value-2</td>\n              <td>0.100545752</td>\n              <td>value-4</td>\n            </tr>\n            <tr>\n              <td>value-1</td>\n              <td>value-2</td>\n              <td>value-3</td>\n              <td>value-4</td>\n            </tr>\n            <tr>\n              <td colSpan='2'>value-1</td>\n              {/* <td>value-2</td> */}\n              <td>value-3</td>\n              <td>value-4</td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>footer-1</td>\n              <td>footer-2</td>\n              <td>footer-3</td>\n              <td>footer-4</td>\n            </tr>\n          </tfoot>\n        </table>\n        <br/>\n        <br/>\n        <br/>\n        <div ref={this.table2}>\n          <table>\n            <caption>my table 2</caption>\n            <thead>\n              <tr>\n                <td>col-1</td>\n                <td>col-2</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>value-1</td>\n                <td>value-2</td>\n              </tr>\n              <tr>\n                <td>value-1</td>\n                <td>value-2</td>\n              </tr>\n              <tr>\n                <td>value-1</td>\n                <td>value-2</td>\n              </tr>\n            </tbody>\n            <tfoot>\n              <tr>\n                <td>footer-1</td>\n                <td>footer-2</td>\n              </tr>\n            </tfoot>\n          </table>\n          <br/>\n          <br/>\n          <br/>\n          <table>\n            <thead>\n              <tr>\n                <td>col-inner</td>\n                <td>col-inner</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>value-inner</td>\n                <td>value-inner</td>\n              </tr>\n              <tr>\n                <td>value-inner</td>\n                <td>value-inner</td>\n              </tr>\n              <tr>\n                <td>value-inner</td>\n                <td>value-inner</td>\n              </tr>\n            </tbody>\n            <tfoot>\n              <tr>\n                <td>footer-inner</td>\n                <td>footer-inner</td>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n        <DownloadButton wb={this.wb} name={this.name} />\n        <br/>\n        <br/>\n        <br/>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport let PageAnotherTab = () => (\n  <div>\n    <h1>Просто другая закладка</h1>\n  </div>\n);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M256 481a14.93 14.93 0 01-9.873-3.706c-21.826-19.087-42.583-36.782-62.109-53.423C73.817 329.96 0 267.909 0 177.514 0 93.988 59.037 31 136 31c60.659 0 99.595 42.378 120 80.537C276.405 73.378 315.341 31 376 31c76.963 0 136 62.988 136 146.514 0 90.396-73.817 152.446-184.018 246.357-19.526 16.641-40.283 34.336-62.109 53.423A14.93 14.93 0 01256 481z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M265.873 477.294c21.826-19.087 42.583-36.782 62.109-53.423C438.183 329.96 512 267.909 512 177.514 512 93.988 452.963 31 376 31c-60.659 0-99.595 42.378-120 80.537V481c3.53 0 7.046-1.23 9.873-3.706z\"\n});\n\nvar SvgHeartIcon = function SvgHeartIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgHeartIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/heartIcon.6f27c8d0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { TabContent } from 'utils/TabContent';\nimport { PageDeclaration } from 'components/PageDeclaration';\nimport { PageExample } from 'components/PageExample';\nimport { PageAnotherTab } from 'components/PageAnotherTab';\nimport { ReactComponent as HeartIcon } from './heartIcon.svg'\nimport styles from './Layout.module.scss';\n\n\n\nexport let Layout = () => {\n  let [activeTab, setActiveTab] = useState('declaration');\n\n  let showTab = name => () => {\n    setActiveTab(name);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <header className={styles.header}>\n        <ul className={styles.nav}>\n          <li><button onClick={showTab('declaration')} className={activeTab === 'declaration' ? styles.active : ''}>Расчитать декларацию</button></li>\n          <li><button onClick={showTab('example')} className={activeTab === 'example' ? styles.active : ''}>Просто пример..</button></li>\n          <li><button onClick={showTab('anotherTab')} className={activeTab === 'anotherTab' ? styles.active : ''}>Другая закладка</button></li>\n        </ul>\n      </header>\n\n      <main className={styles.main}>\n        <TabContent activeTab={activeTab}>\n          <PageDeclaration tabName='declaration' />\n          <PageExample tabName='example' />\n          <PageAnotherTab tabName='anotherTab' />\n        </TabContent>\n      </main>\n\n      <footer className={styles.footer}>\n        <div>\n          <span>With love for my wife Yuliia Miahka</span>\n          <HeartIcon width='24' height='24' />\n        </div>\n        <div>\n          <p>develop by <a href='https://www.facebook.com/profile.php?id=100001423921210' target='_blank' rel='noopener noreferrer'>Yaroslav Frolov</a></p>\n          <p>all rights reserved</p>\n          <p>&copy; copyright</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components/App';\nimport './styles/index.scss'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Layout } from 'components/Layout';\n\nexport let App = () => <Layout />;\n"],"sourceRoot":""}